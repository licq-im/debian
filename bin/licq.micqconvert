#!/usr/bin/perl

# ------------------------------------------------------------------------
#
# Objectives:
# To make the life easier for people switching from MICQ to LICQ.
# Convert MICQ contacts list to LICQ one.
#
# Usage: micq2licq.pl micq_rc_file licq_home_directory
# Example: micq2licq.pl ~/.micqrc ~/.licq
#
# It is quick hack initially done for personal needs. The code
# is released to the public under GPL.
#
# Any comments, hints, suggestions direct them to me:
# 
# atanas argirov
# e-mail: aa@boza.org
# http://www.boza.org/~aa
#
# You can find the original script at the following URL: 
# http://www.boza.org/~aa/src/micq2licq.pl
#
# ------------------------------------------------------------------------

use strict;


print STDERR <<EOF if $#ARGV < 1;

Convert MICQ U*IX client contacts list to LICQ contacts list.

Usage: micq2licq.pl micq_rc_file licq_home_directory
    
Example: micq2licq.pl ~/.micqrc ~/.licq
    
EOF
    
exit 1 if $#ARGV < 1;

# Global variables

my $rc;
my $contacts_counted = 0;
my $directory;
my $absolute_path;
my $initial_users = 0;
my @contact;
my @contacts_list;

$directory = $ARGV[1];


sub fill_out_content {
    
    print OUT "[user]" . "\n";
    print OUT "History = default" . "\n";
    print OUT "Groups.System = 0" . "\n";
    print OUT "Groups.User = 0" . "\n";
    print OUT "Ip = " . "\n";
    print OUT "Port = 0" . "\n";
    print OUT "NewMessages = 0" . "\n";
    print OUT "LastOnline = 977755483" . "\n";
    print OUT "LastSent = 977755431" . "\n";
    print OUT "LastRecv = 0" . "\n";
    print OUT "LastCheckedAR = 0" . "\n";
    print OUT "AutoAccept = 0" . "\n";
    print OUT "StatusToUser = 65535" . "\n";
    print OUT "CustomAutoRsp = " . "\n";
    print OUT "SendRealIp = 0" . "\n";
    print OUT "Alias = " . $contact[1] . "\n";;
    print OUT "FirstName = " . "\n";
    print OUT "LastName = " . "\n";
    print OUT "Email1 = " . "\n";
    print OUT "Email2 = " . "\n";
    print OUT "EmailO = " . "\n";
    print OUT "City = " . "\n";
    print OUT "State = " . "\n";
    print OUT "PhoneNumber = " . "\n";
    print OUT "FaxNumber = " . "\n";
    print OUT "Address = " . "\n";
    print OUT "CellularNumber = " . "\n";
    print OUT "Zipcode = " . "\n";
    print OUT "Country = 0" . "\n";
    print OUT "Timezone = -100" . "\n";
    print OUT "Authorization = 0" . "\n";
    print OUT "HideEmail = 0" . "\n";
    print OUT "Age = 65535" . "\n";
    print OUT "Gender = 0" . "\n";
    print OUT "Homepage = " . "\n";
    print OUT "BirthYear = 0" . "\n";
    print OUT "BirthMonth = 0" . "\n";
    print OUT "BirthDay = 0" . "\n";
    print OUT "Language1 = 0" . "\n";
    print OUT "Language2 = 0" . "\n";
    print OUT "Language3 = 0" . "\n";
    print OUT "CompanyCity = " . "\n";
    print OUT "CompanyState = " . "\n";
    print OUT "CompanyPhoneNumber = " . "\n";
    print OUT "CompanyFaxNumber = " . "\n";
    print OUT "CompanyAddress = " . "\n";
    print OUT "CompanyName = " . "\n";
    print OUT "CompanyDepartment = " . "\n";
    print OUT "CompanyPosition = " . "\n";
    print OUT "CompanyHomepage = " . "\n";
}    

sub update_users_conf {
    my $j;
    my @users;
    my $system_commands;
    my $filename  =  $ARGV[1] . "/" . "users.conf";
    my $filename_tmp  =  $ARGV[1] . "/" . "users.conf.tmp";
    open (IN, "$filename") or die "Can't open requested file $!";
    open (TMP, "+>$filename_tmp") or die "Can't open requested file $!";
    
    print "\nUpdating $filename... ";
    
    while (<IN>) {
	$rc = index($_, "NumOfUsers");
	if ($rc >= 0) {
	    @users = split("=");
	    $initial_users = $users[1];
	    print TMP "NumOfUsers = " . ($initial_users + $contacts_counted - 1) . "\n";
	} else {
	    print TMP $_;
	}    
    }
    
    for ($j=0; $j < ($contacts_counted-1); $j++) {
	print TMP "User" . ($j + $initial_users + 1) . " = " . $contacts_list[$j] . "\n";
    }    
    
    close (IN);
    close (TMP);

    $system_commands = "cp $filename_tmp $filename; rm $filename_tmp";
    system($system_commands) == 0 or die "system() call failed: $?";
    
    print "Done.\n\n";
}


# Ignition point
# try to open .micqrc

open (STREAM, $ARGV[0]) or die "Can't open requested file $!";

while (<STREAM>) {
    
    if ($contacts_counted >= 1) {
	chop;
	@contact = split (" ");
	$contact[0] =~ s/\*//g;
	$contact[0] =~ s/\~//g;
	$contacts_list[$contacts_counted-1] = $contact[0];
	$absolute_path = $directory . "/users/" . $contact[0] . ".uin";
	open (OUT, ">$absolute_path") or die "Can't open requested file $!";
	&fill_out_content();
	close (OUT);
	print "Contact #" . $contacts_counted . ": " . "uin: " . $contact[0] . " -> " . "alias: " . $contact[1] . " processed\n";
	$contacts_counted++;
       
    } 
    
    else {
    
	$rc = index ($_, "Contacts");
	if ($rc >= 0) {
	    $contacts_counted = 1;
	}
    }
}


# let update users.conf also

&update_users_conf();

# let's clean

close (STREAM);

