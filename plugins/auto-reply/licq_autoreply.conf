# Sample ICQ autoreplyer configuration file
# Edit and copy to ~/.licq

[Reply]
# The program to run for output to send in the message.
# "talkback" might be any program or script.
Program = talkback

# This is a string which will be parsed for user % symbols
# and then appended to the above command.
# This example passes the uin and then the alias in quotes
# So the final command might be:
#   talkback -u 3456789 -a 'coolguy'
# WARNING: be careful passing the alias, name etc as they could
#          contain exploits such as "evil_alias; rm -rf ~".
#          Always quote anything that could contain text.
Arguments = -u %u -a '%a'

# This flag tells the plugin whether or not the command
# expects the incoming message as standard input
# If set to 1 then the program will be fed the incoming
# message to standard input.
PassMessage = 0

# If this is set, then the exit code of the command will
# be used to determine if the message should be sent or
# not.  A non-zero code will cause the reply to be aborted.
FailOnExitCode = 0

# This value is used if the above is set and the exit code
# is non zero.  If set then a bad exit code will not delete
# the relevant message.  If not set then the event will be
# erased even if the command exit code is non-zero.
AbortDeleteOnExitCode = 1

# Set SendThroughServer = 1 if auto-reply should always send 
# messages through the server and never try to use 
# a direct connection.
# 0 = Try to send direct
# 1 = Send through server
SendThroughServer = 1

# Same as -e on Licq startup.
# check "licq -p autoreply -- -h"
StartEnabled = 1

# Same as -d on Licq startup.
# check "licq -p autoreply -- -h"
DeleteMessage = 1

# Here is a simple example which will bounce the event
# right back to the user:
#
# Program = cat
# Arguments = 
# PassMessage = 1
#
#
# Here is an example which simply sends a fortune back to
# the user:
#
# Program = /usr/games/fortune
# Arguments =
# PassMessage = 0
#

